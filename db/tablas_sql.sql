CREATE TABLE functionary(
RUN VARCHAR(12) PRIMARY KEY UNIQUE NOT NULL,
NAME VARCHAR(100) UNIQUE NOT NULL,
PHONE VARCHAR(20) UNIQUE NOT NULL,
MAIL VARCHAR(50) UNIQUE NOT NULL,
PASS VARCHAR(40) NOT NULL
);

CREATE TABLE permits_f(
RUN VARCHAR(12) NOT NULL,
COD INTEGER NOT NULL,
name varchar(100) not null,
estado ineteger not null
);

CREATE TABLE carrer(
COD_C INTEGER PRIMARY KEY UNIQUE NOT NULL,
NAME VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE student(
RUN VARCHAR(12) PRIMARY KEY UNIQUE NOT NULL,
NAME VARCHAR(100) UNIQUE NOT NULL,
MAIL VARCHAR(50) UNIQUE NOT NULL,
TIER VARCHAR(20) UNIQUE NOT NULL,
PHONE VARCHAR(20) UNIQUE NOT NULL,
PACE CHAR NOT NULL,
COD_C INTEGER UNIQUE NOT NULL
);

CREATE TABLE derivation(
COD_DERIV SERIAL PRIMARY KEY UNIQUE NOT NULL,
COD_PROG INTEGER UNIQUE NOT NULL,
RUN_STUDENT VARCHAR(12) UNIQUE NOT NULL,
RUN_FUNCTIONARY VARCHAR(12) UNIQUE NOT NULL,
DT_DERIV timestamp without time zone NOT NULL,
DT_PROGAMMED timestamp without time zone NOT NULL,
DT_DONE timestamp without time zone,
ESTADO CHAR NOT NULL DEFAULT 'P',
SUPPORT VARCHAR(40) NOT NULL 
);

CREATE TABLE prog(
COD_P INTEGER PRIMARY KEY UNIQUE NOT NULL,
NAME VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE master_key(
RUN VARCHAR(12) PRIMARY KEY UNIQUE NOT NULL,
MAIL VARCHAR(50) UNIQUE NOT NULL,
PASS VARCHAR(40)
);


ALTER TABLE permits_f ADD FOREIGN KEY (run) REFERENCES functionary(run);
ALTER TABLE permits_f ADD FOREIGN KEY (cod) REFERENCES carrer(cod_c);
ALTER TABLE permits_f ADD FOREIGN KEY (name) REFERENCES carrer(name);

ALTER TABLE derivation ADD FOREIGN KEY (cod_prog) REFERENCES prog(cod_p);
ALTER TABLE derivation ADD FOREIGN KEY (run_student) REFERENCES student(run);
ALTER TABLE derivation ADD FOREIGN KEY (run_functionary) REFERENCES functionary(run);